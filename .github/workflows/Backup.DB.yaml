name: Backup.Database

on:
    workflow_dispatch:
        inputs:
            backup_dir:
                description: "Path to backup directory on server"
                required: false
                default: "/var/backups"
                type: string
            mongo_enabled:
                required: false
                type: boolean
                default: true
                description: "active mongo db"
            postgres_enabled:
                required: false
                type: boolean
                default: true
                description: "active postgres db"
    push:
        branches:
            - main
jobs:
    backup:
        name: Backup Databases on Remote Server
        runs-on: ubuntu-latest
        outputs:
            db-status: ${{ steps.backup-step.outputs.db_status }}

        steps:
            - name: Setup SSH
              uses: webfactory/ssh-agent@v0.9.0
              with:
                  ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

            - name: Add known hosts
              run: |
                  mkdir -p ~/.ssh
                  chmod 700 ~/.ssh
                  ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
                  chmod 644 ~/.ssh/known_hosts

            - name: Run database backups
              id: backup-step
              env:
                  SERVER_HOST: ${{ secrets.SERVER_HOST }}
                  SERVER_USER: ${{ secrets.SERVER_USER }}
                  SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
                  BACKUP_DIR: ${{ inputs.backup_dir }}
                  MONGO_ENABLED: ${{ inputs.mongo_enabled }}
                  POSTGRES_ENABLED: ${{ inputs.postgres_enabled }}
              run: |
                  TIMESTAMP=$(date +'%Y%m%d_%H%M%S')
                  BACKUP_PATH="$BACKUP_DIR/db_backup_$TIMESTAMP"
                  echo "🧱 Creating backup folder $BACKUP_PATH"

                  ssh "$SERVER_USER"@"$SERVER_HOST" bash -s -- "$SERVER_PASSWORD" "$BACKUP_PATH" "$MONGO_ENABLED" "$POSTGRES_ENABLED" <<'EOF'
                    set -e
                    SERVER_PASSWORD="$1"
                    BACKUP_PATH="$2"
                    MONGO_ENABLED="$3"
                    POSTGRES_ENABLED="$4"

                    echo "$SERVER_PASSWORD" | sudo -S mkdir -p "$BACKUP_PATH"

                    if [ "$MONGO_ENABLED" = "true" ]; then
                        if command -v mongodump &>/dev/null; then
                            echo "⚠️ MongoDB not installed"
                            exit 100
                        fi
                        echo "📦 Backing up MongoDB..."
                        if ! echo "$SERVER_PASSWORD" | sudo mongodump --archive="$BACKUP_PATH/mongo.gz" --gzip; then
                            echo "❌ MongoDB backup failed"
                            exit 101
                        fi
                    fi

                    if [ "$POSTGRES_ENABLED" = "true" ]; then
                        if ! command -v pg_dumpall &>/dev/null; then
                            echo "⚠️ PostgreSQL not installed"
                            exit 102
                        fi
                        echo "📦 Backing up PostgreSQL..."
                        if ! echo "$SERVER_PASSWORD" | sudo pg_dumpall > "$BACKUP_PATH/postgres.sql"; then
                            echo "❌ PostgreSQL backup failed"
                            exit 103
                        fi
                    fi

                    echo "✅ Backup completed at $BACKUP_PATH"
                  EOF

                  # Capture SSH exit code
                  SSH_EXIT_CODE=$?
                  if [ $SSH_EXIT_CODE -eq 100 ] || [ $SSH_EXIT_CODE -eq 102 ]; then
                    STATUS="database-not-installed"
                  elif [ $SSH_EXIT_CODE -eq 101 ] || [ $SSH_EXIT_CODE -eq 103 ]; then
                    STATUS="backup-failed"
                  else
                    STATUS="backup-successful"
                  fi

                  echo "db_status=$STATUS" >> "$GITHUB_OUTPUT"
